{"version":3,"sources":["components/shared-components/Loading/index.js","components/util-components/Icon/index.js","components/shared-components/Flex/index.js","configs/EnvironmentConfig.js","configs/AppConfig.js","contexts/ClientsContext.jsx","redux/constants/Auth.js","constants/ThemeConstant.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","configs/NavigationConfig.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","views/index.js","App.js","serviceWorker.js","index.js","utils/index.js","redux/actions/Auth.js"],"names":["Icon","React","createElement","LoadingOutlined","style","fontSize","spin","Loading","props","align","cover","className","concat","Spin","indicator","defaultProps","Component","render","type","this","Fragment","Flex","children","alignItems","justifyContent","mobileFlex","flexDirection","APP_NAME","API_BASE_URL","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","ClientsContext","createContext","ClientsProvider","_ref","users","setUsers","useState","Provider","value","fetchUserData","fetch","then","response","json","data","catch","error","console","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","ROW_GUTTER","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","arguments","length","undefined","action","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","initTheme","theme","reducers","combineReducers","Theme","Auth","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","async","email","password","signInWithEmailAndPassword","user","err","signInEmailRequest","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","takeEvery","payload","call","put","showAuthMessage","setItem","uid","authenticated","signOutUser","removeItem","signOutSuccess","signUpWithFBEmail","_ref2","signUpSuccess","signInWithFBGoogle","signInWithGoogleAuthenticated","signInWithFacebook","signInWithFacebookAuthenticated","rootSaga","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","FormattedMessage","withRef","navigationConfig","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","ShoppingCartOutlined","CalendarOutlined","SmileOutlined","SettingOutlined","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","IntlMessage","id","toString","setDefaultOpen","keyList","keyString","arr","split","index","elm","push","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","Link","onClick","to","connect","Sider","Layout","width","collapsed","Scrollbars","autoHide","MenuContent","Object","assign","getColorContrast","backgroundColor","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","Drawer","placement","closable","visible","bodyStyle","padding","Logo","ArrowLeftOutlined","ColorPicker","colorChange","color","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","SketchPicker","onChange","rgb","rgba","r","g","b","a","SelectedLanguage","language","lang","filter","langId","getLanguageDetail","langName","maxWidth","DownOutlined","_ref3","onLocaleChange","configDisplay","languageOption","i","CheckOutlined","Dropdown","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","name","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","isCollapse","switcher","themes","useThemeSwitcher","hex","rgbaToHex","Radio","Group","size","onNavTypeClick","target","Button","Switch","checked","isChecked","changedTheme","NavLanguage","CopyToClipboard","text","configState","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","constructor","showDrawer","setState","ThemeConfigurator","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","AutoComplete","ref","dropdownClassName","onSelect","onSearch","searchText","item","label","filterOption","inputValue","option","toUpperCase","indexOf","Input","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","NavSearch","breadcrumbData","forEach","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","location","pathSnippets","pathname","buildBreadcrumb","_","url","slice","join","Breadcrumb","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","Suspense","fallback","Route","component","lazy","Redirect","from","memo","Content","AppLayout","currentRouteInfo","getRouteInfo","isNavSide","status","HeaderNav","TopNav","SideNav","paddingLeft","MobileNav","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","currentAppLocale","IntlProvider","ConfigProvider","exact","dark","process","light","App","ThemeSwitcherProvider","themeMap","defaultTheme","insertionPoint","Router","Views","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Utils","getNameInitial","initials","shift","pop","navTree","route","p","hasOwnProperty","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","shadeColor","percent","R","G","B","RR","GG","BB","trim","str","replace","inParts","parseFloat","toFixed","outParts","Math","round","part","getSignNum","number","positive","negative","antdTableSorter","toLowerCase","filterArray","list","deleteArrayRow","wildCardSearch","input","screens","breakpoints","hideAuthMessage","showLoading"],"mappings":"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","file":"static/js/main.78250083.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light'\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nexport const ClientsContext = React.createContext();\r\n\r\nexport const ClientsProvider = ({ children }) => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const fetchUserData = () => {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setUsers(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ClientsContext.Provider value={{ users, setUsers, fetchUserData }}>{children}</ClientsContext.Provider>\r\n  );\r\n};\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import {\r\n  DashboardOutlined,\r\n  ShoppingCartOutlined,\r\n  CalendarOutlined,\r\n  SmileOutlined,\r\n  SettingOutlined,\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\n\r\nconst dashBoardNavTree = [\r\n  {\r\n    key: 'dashboards',\r\n    path: `${APP_PREFIX_PATH}/dashboards`,\r\n    title: 'ОСНОВНЫЕ',\r\n    icon: DashboardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [\r\n      {\r\n        key: 'dashboards-default',\r\n        path: `${APP_PREFIX_PATH}/test`,\r\n        title: 'Дашборд',\r\n        icon: DashboardOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'catalog-default',\r\n        path: `${APP_PREFIX_PATH}/test/catalog`,\r\n        title: 'Каталог',\r\n        icon: ShoppingCartOutlined,\r\n        breadcrumb: false,\r\n        submenu: [\r\n          {\r\n            key: 'catalog-not-default1',\r\n            path: `${APP_PREFIX_PATH}/dashboards/catalog/list`,\r\n            title: 'Товары',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'catalog-not-default2',\r\n            path: `${APP_PREFIX_PATH}/dashboards/catalog/list1`,\r\n            title: 'Категории',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'catalog-not-default3',\r\n            path: `${APP_PREFIX_PATH}/dashboards/catalog/list2`,\r\n            title: 'Колекции',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'catalog-not-default4',\r\n            path: `${APP_PREFIX_PATH}/dashboards/catalog/list3`,\r\n            title: 'Комбо',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'order-default',\r\n        path: `${APP_PREFIX_PATH}/dashboards/order`,\r\n        title: 'Заказы',\r\n        icon: CalendarOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'clients-default',\r\n        path: `${APP_PREFIX_PATH}/dashboards/clients`,\r\n        title: 'Клиенты',\r\n        icon: SmileOutlined,\r\n        breadcrumb: false,\r\n        submenu: [\r\n          {\r\n            key: 'clients-default-list',\r\n            path: `${APP_PREFIX_PATH}/dashboards/clients/list`,\r\n            title: 'Список клиентов',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'clients-default-list2',\r\n            path: `${APP_PREFIX_PATH}/dashboards/clients/list1`,\r\n            title: 'Группы клиентов',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\nconst settingBoardNavTree = [\r\n  {\r\n    key: 'Setting',\r\n    path: `${APP_PREFIX_PATH}/setting`,\r\n    title: 'Основные',\r\n    icon: DashboardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [\r\n      {\r\n        key: 'Setting',\r\n        path: `${APP_PREFIX_PATH}/setting/clients/list/:userId`,\r\n        title: 'Основные',\r\n        icon: SettingOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst navigationConfig = [...dashBoardNavTree, ...settingBoardNavTree];\r\n\r\nexport default navigationConfig;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu, Grid } from 'antd';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport Icon from '../util-components/Icon';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { onMobileNavToggle } from 'redux/actions/Theme';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = '';\r\n  if (key) {\r\n    const arr = key.split('-');\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n  const { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n  const closeMobileNav = () => {\r\n    if (isMobile) {\r\n      onMobileNavToggle(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? 'light' : 'dark'}\r\n      mode=\"inline\"\r\n      style={{ height: '100%', borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? 'hide-group-title' : ''}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup key={menu.key} title={setLocale(localization, menu.title)}>\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={subMenuFirst.icon ? <Icon type={subMenuFirst?.icon} /> : null}\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? <Icon type={subMenuSecond?.icon} /> : null}\r\n                      <span>{setLocale(localization, subMenuSecond.title)}</span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\n// const TopNavContent = (props) => {\r\n//   const { topNavColor, localization } = props;\r\n\r\n//   return (\r\n//     <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n//       {navigationConfig.map((menu) =>\r\n//         menu.submenu.length > 0 ? (\r\n//           <SubMenu\r\n//             key={menu.key}\r\n//             popupClassName=\"top-nav-menu\"\r\n//             title={\r\n//               <span>\r\n//                 {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n//                 <span>{setLocale(localization, menu.title)}</span>\r\n//               </span>\r\n//             }\r\n//           >\r\n//             {menu.submenu.map((subMenuFirst) =>\r\n//               subMenuFirst.submenu.length > 0 ? (\r\n//                 <SubMenu\r\n//                   key={subMenuFirst.key}\r\n//                   icon={subMenuFirst.icon ? <Icon type={subMenuFirst?.icon} /> : null}\r\n//                   title={setLocale(localization, subMenuFirst.title)}\r\n//                 >\r\n//                   {subMenuFirst.submenu.map((subMenuSecond) => (\r\n//                     <Menu.Item key={subMenuSecond.key}>\r\n//                       <span>{setLocale(localization, subMenuSecond.title)}</span>\r\n//                       <Link to={subMenuSecond.path} />\r\n//                     </Menu.Item>\r\n//                   ))}\r\n//                 </SubMenu>\r\n//               ) : (\r\n//                 <Menu.Item key={subMenuFirst.key}>\r\n//                   {subMenuFirst.icon ? <Icon type={subMenuFirst?.icon} /> : null}\r\n//                   <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n//                   <Link to={subMenuFirst.path} />\r\n//                 </Menu.Item>\r\n//               )\r\n//             )}\r\n//           </SubMenu>\r\n//         ) : (\r\n//           <Menu.Item key={menu.key}>\r\n//             {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n//             <span>{setLocale(localization, menu?.title)}</span>\r\n//             {menu.path ? <Link to={menu.path} /> : null}\r\n//           </Menu.Item>\r\n//         )\r\n//       )}\r\n//     </Menu>\r\n//   );\r\n// };\r\n\r\n// const MenuContent = (props) => {\r\n//   return props.type === NAV_TYPE_SIDE ? <SideNavContent {...props} /> : <TopNavContent {...props} />;\r\n// };\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE && <SideNavContent {...props} />;\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent';\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({ navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n  return (\r\n    <Sider\r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK ? 'side-nav-dark' : ''}`}\r\n      width={SIDE_NAV_WIDTH}\r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n      </Scrollbars>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } = theme;\r\n  return { navCollapsed, sideNavTheme };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport MenuContent from './MenuContent';\r\n\r\nexport const TopNav = ({ topNavColor, localization = true }) => {\r\n  const props = { topNavColor, localization };\r\n  return (\r\n    <div\r\n      className={`top-nav ${utils.getColorContrast(topNavColor)}`}\r\n      style={{ backgroundColor: topNavColor }}\r\n    >\r\n      <div className=\"top-nav-wrapper\">\r\n        <MenuContent type={NAV_TYPE_TOP} {...props} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } = theme;\r\n  return { topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from 'react';\r\nimport { Drawer } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent';\r\nimport { onMobileNavToggle } from 'redux/actions/Theme';\r\nimport Logo from './Logo';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement=\"right\"\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Layout } from 'antd';\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = (props) => {\r\n  const {\r\n    navCollapsed,\r\n    mobileNav,\r\n    navType,\r\n    headerNavColor,\r\n    toggleCollapsedNav,\r\n    onMobileNavToggle,\r\n    isMobile,\r\n    currentTheme,\r\n  } = props;\r\n  const [searchActive, setSearchActive] = useState(false);\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false);\r\n  };\r\n\r\n  const onToggle = () => {\r\n    if (!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed);\r\n    } else {\r\n      onMobileNavToggle(!mobileNav);\r\n    }\r\n  };\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\r\n  const mode = () => {\r\n    if (!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff');\r\n    }\r\n    return utils.getColorContrast(headerNavColor);\r\n  };\r\n  const navMode = mode();\r\n  const getNavWidth = () => {\r\n    if (isNavTop || isMobile) {\r\n      return '0px';\r\n    }\r\n    if (navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      onSearchClose();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{ backgroundColor: headerNavColor }}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode} />\r\n        <div className=\"nav\" style={{ width: `calc(100% - ${getNavWidth()})` }}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">\r\n              {isNavTop && !isMobile ? null : (\r\n                <li\r\n                  className=\"ant-menu-item ant-menu-item-only-child\"\r\n                  onClick={() => {\r\n                    onToggle();\r\n                  }}\r\n                >\r\n                  {navCollapsed || isMobile ? (\r\n                    <MenuUnfoldOutlined className=\"nav-icon\" />\r\n                  ) : (\r\n                    <MenuFoldOutlined className=\"nav-icon\" />\r\n                  )}\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose} />\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } = theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme };\r\n};\r\n\r\nexport default connect(mapStateToProps, { toggleCollapsedNav, onMobileNavToggle })(HeaderNav);\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\" />}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/home`} component={lazy(() => import(`./home`))} />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/dashboards/clients/list`}\r\n          component={lazy(() => import(`./clients`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/setting/clients/list/:userId`}\r\n          component={lazy(() => import(`./setting-profile`))}\r\n        />\r\n\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default React.memo(AppViews);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout location={location}/>\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from 'react-css-theme-switcher';\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\nimport { ClientsProvider } from 'contexts/ClientsContext';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ClientsProvider>\r\n          <ThemeSwitcherProvider\r\n            themeMap={themes}\r\n            defaultTheme={THEME_CONFIG.currentTheme}\r\n            insertionPoint=\"styles-insertion-point\"\r\n          >\r\n            <Router>\r\n              <Switch>\r\n                <Route path=\"/\" component={Views} />\r\n              </Switch>\r\n            </Router>\r\n          </ThemeSwitcherProvider>\r\n        </ClientsProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n"],"sourceRoot":""}